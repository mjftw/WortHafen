name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  Check-Drizzle-Changes:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.check-changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - id: check-changes
        run: |
          echo "Checking for changes in the 'drizzle' directory..."
          if git rev-parse HEAD^ &> /dev/null; then
            if git diff --quiet HEAD^ HEAD -- drizzle; then
              echo "No changes in 'drizzle' directory."
              echo "changes=false" >> $GITHUB_ENV
            else
              echo "Changes detected in 'drizzle' directory."
              echo "changes=true" >> $GITHUB_ENV
            fi
          else
            echo "This is the first commit, no previous history."
            echo "changes=true" >> $GITHUB_ENV
          fi

  Migrate-Database:
    needs: Check-Drizzle-Changes
    if: always() && needs.Check-Drizzle-Changes.outputs.changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21.x'
      - name: Install dependencies
        run: yarn
      - name: Check database migrations
        env:
          SKIP_ENV_VALIDATION: true
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: production
        run: yarn exec drizzle-kit check:pg
      - name: Apply migrations
        env:
          SKIP_ENV_VALIDATION: true
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: production
        run: yarn db:migrate

  Deploy-Production:
    needs: [Migrate-Database, Check-Drizzle-Changes]
    if: always() && needs.Check-Drizzle-Changes.outputs.changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel --prod --token $VERCEL_TOKEN
